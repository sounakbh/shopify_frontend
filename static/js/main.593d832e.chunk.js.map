{"version":3,"sources":["components/DisplayMovieList.js","components/AddNomination.js","components/RemoveNomination.js","App.js","index.js"],"names":["DisplayMovieList","FavouriteComponent","this","props","favouriteComponent","movies","map","movie","className","src","alt","onClick","handleFavouriteClick","Component","AddNomination","RemoveNomination","App","handleChange","event","query","target","value","fetch","then","res","json","result","setState","movieArray","push","error","console","log","addNominatedMovie","favouriteMovies","movieFavourites","JSON","parse","localStorage","getItem","title","Title","duplicateMovieSearch","filter","obj","imdbID","Object","keys","length","state","favourites","alert","saveToLocalStorage","removeNominatedMovie","removedFavourite","index","indexOf","splice","items","setItem","stringify","placeholder","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.593d832e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./css/DisplayMovieList.css\";\n\nclass DisplayMovieList extends Component {\n  render() {\n    const FavouriteComponent = this.props.favouriteComponent;\n    return (\n      <>\n        {this.props.movies.map((movie) => (\n          <div className=\"movieTab\">\n            <div className=\"row\">\n              <div className=\"title\">{movie[\"Title\"]}</div>\n            </div>\n\n            <div className=\"row poster\">\n              <img\n                className=\"item\"\n                src={movie[\"Poster\"]}\n                alt=\"#Movie Poster Unavailable\"\n              ></img>\n            </div>\n            <div className=\"row\">\n              <button\n                className=\"item add-button\"\n                onClick={() => this.props.handleFavouriteClick(movie)}\n              >\n                {<FavouriteComponent />}\n              </button>\n            </div>\n          </div>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default DisplayMovieList;\n","import React, { Component } from \"react\";\n\nclass AddNomination extends Component {\n  render() {\n    return (\n      <div className=\"add-button\">\n        <i className=\"fa fa-heart\" />\n        &nbsp;Favourite\n      </div>\n    );\n  }\n}\n\nexport default AddNomination;\n","import React, { Component } from \"react\";\n\nclass RemoveNomination extends Component {\n  render() {\n    return (\n      <div className=\"add-button\">\n        <i className=\"fa fa-trash\" />\n        &nbsp;Remove\n      </div>\n    );\n  }\n}\n\nexport default RemoveNomination;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport DisplayMovieList from \"./components/DisplayMovieList\";\nimport AddNomination from \"./components/AddNomination\";\nimport RemoveNomination from \"./components/RemoveNomination\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      favourites: [],\n      movies: [],\n    };\n  }\n\n  handleChange = (event) => {\n    const API_KEY = \"93a17f12\";\n    const query = event.target.value;\n\n    // fetch the data and store results into state\n    fetch(\"https://omdbapi.com/?s=\" + query + \"&apikey=\" + API_KEY)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          if (result[\"Search\"]) {\n            this.setState({ movies: [] });\n            let movieArray = [];\n            for (var movie in result[\"Search\"]) {\n              movieArray.push(result[\"Search\"][movie]);\n            }\n            this.setState({ movies: movieArray });\n          }\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  };\n\n  addNominatedMovie = (movie) => {\n    // retrieve from local storage\n    const movieFavourites = JSON.parse(\n      localStorage.getItem(\"react-movie-app-favourites\")\n    );\n\n    var title = movie.Title;\n    // check for duplicate nomination\n    var duplicateMovieSearch = movieFavourites.filter((obj) => {\n      return obj.imdbID === movie.imdbID;\n    });\n\n    if (Object.keys(duplicateMovieSearch).length === 0) {\n      var favouriteMovies;\n      // check for max 5 nominations\n      if (this.state.favourites.length < 5) {\n        favouriteMovies = [...this.state.favourites, movie];\n        alert('\"' + title + '\"' + \" added to your nominations!\");\n      } else {\n        alert(\"List of Nominated movies Completed!\");\n        favouriteMovies = [...this.state.favourites];\n      }\n      this.saveToLocalStorage(favouriteMovies);\n      this.setState({ favourites: favouriteMovies });\n    } else {\n      alert(\"Already added to Nominations!\");\n    }\n  };\n\n  removeNominatedMovie = (movie) => {\n    var title = movie.Title;\n    const removedFavourite = this.state.favourites;\n    const index = removedFavourite.indexOf(movie);\n    removedFavourite.splice(index, 1);\n    this.setState({ favourites: removedFavourite });\n    this.saveToLocalStorage(removedFavourite);\n    alert('\"' + title + '\"' + \" removed from your nominations!\");\n  };\n\n  saveToLocalStorage = (items) => {\n    localStorage.setItem(\"react-movie-app-favourites\", JSON.stringify(items));\n  };\n\n  componentWillMount() {\n    // display nominated movies after page load\n    const movieFavourites = JSON.parse(\n      localStorage.getItem(\"react-movie-app-favourites\")\n    );\n\n    if (movieFavourites) {\n      this.setState({ favourites: movieFavourites });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid main-container\">\n        <div className=\"row page-title\">\n          <h1>The Shoppies</h1>\n          <br /> <br /> <br />\n        </div>\n        <div className=\"row search\">\n          <input\n            placeholder=\"Type To Nominate Movies...\"\n            className=\"search-bar\"\n            value={this.state.value}\n            onChange={this.handleChange}\n          />\n          <br /> <br />\n        </div>\n        <div className=\"row\">\n          <DisplayMovieList\n            movies={this.state.movies}\n            handleFavouriteClick={this.addNominatedMovie}\n            favouriteComponent={AddNomination}\n          />\n        </div>\n        <div className=\"row page-title\">\n          <h2>Nominated Movies</h2>\n          <br /> <br />\n        </div>\n        <div className=\"row\">\n          <DisplayMovieList\n            movies={this.state.favourites}\n            handleFavouriteClick={this.removeNominatedMovie}\n            favouriteComponent={RemoveNomination}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}